version: 0.2

phases:
  build:
    commands:
      - echo Logging in to Docker Hub...
      - echo $DOCKERHUB_TOKEN | docker login --username $DOCKERHUB_USERNAME --password-stdin
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - echo Build started on `date`
      - echo Building the Docker image using layers previous image
      - IMAGE_TAG=$CODEBUILD_RESOLVED_SOURCE_VERSION
      - echo Using GIT commit hash $CODEBUILD_RESOLVED_SOURCE_VERSION
      - IMAGE_LATEST=$(aws ecr describe-images --output json --repository-name $IMAGE_REPO_NAME --query 'sort_by(imageDetails,& imagePushedAt)[-1].imageTags[0]' | jq . --raw-output)
      - echo Found cache in $IMAGE_LATEST
      - DOCKER_BUILDKIT=1 docker build --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_LATEST -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Build completed on `date`
      - echo Pushing the Docker image to rev...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo task-definition for latest subsequent tasks
      - >
        aws ecs describe-task-definition --include "TAGS" --task-definition $TASKDEF |
          jq '.taskDefinition.tags = .tags | .taskDefinition' |
          jq 'del(.taskDefinitionArn,.revision,.status,.registeredAt,.registeredBy,.requiresAttributes,.compatibilities)' |
          jq '.containerDefinitions[0].image = "'"$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG"'"' > taskdef.json
      - aws ecs register-task-definition --region $AWS_DEFAULT_REGION --cli-input-json file://taskdef.json
